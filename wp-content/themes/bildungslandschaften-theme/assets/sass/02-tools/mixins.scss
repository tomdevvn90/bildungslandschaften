// Responsive breakpoints mixin
@mixin add_variables( $view: frontend ) {

  @if frontend == $view {

    :root {
      @content;
    }
  }

  @if editor == $view {

    :root,
    body {
      @content;
    }
  }
}

// Button style
// - Applies button styles to blocks and elements that share them.
@mixin button-style() {
  border: var(--button--border-width) solid var(--button--color-text);
  border-radius: var(--button--border-radius);
  cursor: pointer;
  font-weight: var(--button--font-weight);
  font-family: var(--button--font-family);
  font-size: var(--button--font-size);
  line-height: var(--button--line-height);
  padding: var(--button--padding-vertical) var(--button--padding-horizontal);
  text-decoration: none;
  transition: .3s;

  // Standard Button Color Relationship Logic
  &:not(:hover):not(:active) {

    // Text colors
    &:not(.has-text-color) {
      color: var(--button--color-text);

      // Nested
      .has-background & {
        color: var(--local--color-background, var(--button--color-text));

        &.has-background {
          color: var(--button--color-text);
        }
      }
    }

    // Background-colors
    &:not(.has-background) {
      background-color: var(--button--color-background);

      // Nested
      .has-background & {
        background-color: var(--local--color-primary, var(--button--color-text));
      }
    }
  }

  // Hover Button color should match parent element foreground color
  &:hover,
  &:active {
    background-color: var(--button--color-background-hover);
    border-color: var(--button--color-background-hover);
    color: var(--button--color-text-hover);
  }

  // Focus Button outline color should always match the current text color
  &:focus {
    outline-offset: -6px;
    outline: 2px dotted currentColor;
  }

  // Disabled Button colors
  &:disabled {
    background-color: var(--global--color-white-50);
    border-color: var(--global--color-white-50);
    color: var(--button--color-text-active);
  }
}

@mixin innerblock-margin-clear($container) {

  // Clear the top margin for the first-child.
  > #{$container} > *:first-child {
    margin-top: 0;
  }

  // Last child that is not the appender.
  > #{$container} > *:last-child:not(.block-list-appender) {
    margin-bottom: 0;
  }

  // When selected, the last item becomes the second last because of the appender.
  &.has-child-selected > #{$container} > *:nth-last-child(2),
  &.is-selected > #{$container} > *:nth-last-child(2) {
    margin-bottom: 0;
  }
}

@mixin __transition($t : all 1s, $loaded : true) {
  opacity: 0;
  transition: #{$t} cubic-bezier(0.9, 0, 0.5, 1.2);
  transition-delay: .5s;
  will-change: transform;
  @if $loaded == true {
    .__loaded & {
      opacity: 1;
      transform: none;
    }
  }
  @content;
}


%btn-style-before {
  &:before {
    position: absolute;
    content: '';
    top: 0;
    left: 0;
    transform: translate(-15px, 15px);
    background: #7EBFCC;
    border: solid 1px var(--dark, #161614FF);
    width: 100%;
    height: 100%;
    transition: .3s;
  }
}

%btn-style {
  display: inline-flex;
  position: relative;
  margin-bottom: 15px;
  margin-left: 15px;
  @extend %btn-style-before;
  $dark: #161614;

  .bild-btn {
    padding: 16px 26px;
    border-radius: 0;
    line-height: normal;
    font-weight: 500;
    background-color: white;
    color: var(--dark, $dark);
    border: solid 1px var(--dark, $dark);
    display: inline-flex;
    align-items: center;
    text-decoration: none;
    //text-align: center;
    transition: 0.3s;
    position: relative;
    transform: translate(0, 0);
    min-width: 200px;
    justify-content: space-between;
    width: inherit;

    .bild-btn-text {
      padding-bottom: 6px;
    }

    .__icon {
      margin-left: 15px;
      display: inline-flex;

      svg {
        height: 36px;
        width: 20px;
      }
    }
  }

  &:hover {
    .bild-btn {
      color: #fff;
      background-color: #0f163a;
      border: solid 1px #0f163a;
      opacity: 1;
      transform: translate(-5px, 5px);
    }

    &:before {
      opacity: .6;
    }
  }
}